{"version":3,"sources":["components/CharacterDetails/index.jsx","components/Spinner/index.jsx","repositories/character_repository.js","utils/constants.js","pages/CharacterInfoPage/index.jsx","utils/useQuery.js","assets/darth-vader.png","components/AsideFilters/index.jsx","components/CharacterItem/index.jsx","components/CharacterGrid/index.jsx","components/TopBar/index.jsx","pages/CharacterListPage/index.jsx","routes.js","App.jsx","reportWebVitals.js","index.js"],"names":["CharacterDetails","character","history","useHistory","getFormattedDate","date","splitted","split","className","onClick","goBack","name","birth_year","gender","translateGender","color","translateColor","eye_color","movies","map","movie","key","title","release_date","Spinner","class","getAll","a","send","paginate","next","find","url","response","requests","films","Promise","all","fetch","json","CharacterRepository","CharacterInfoPage","URLSearchParams","useLocation","search","get","useState","setCharacter","useEffect","getCharacterInfo","AsideFilters","onSearch","src","icon","type","id","value","htmlFor","CharacterItem","to","CharacterGrid","characters","ch","TopBar","count","containsPrevious","containsNext","OnNextPage","OnPreviousPage","CharacterList","setCharacters","previousLink","setPreviousLink","nextLink","setNextLink","resultsNumber","setResultsNumber","updateCharacterList","fecthCharacters","results","previous","console","log","handleNextPage","handlePreviousPage","Routes","exact","path","component","CharacterListPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4cff0f9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport \"./styles.css\";\r\n\r\nconst CharacterDetails = ({ character  }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const getFormattedDate = date => {\r\n        const splitted = date.split('-');\r\n        return `${splitted[2]}/${splitted[1]}/${splitted[0]}`\r\n    }\r\n\r\n    const translateGender = gender => {\r\n        switch(gender) {\r\n            case 'male': return 'Masculino';\r\n            case 'female': return 'Feminino';\r\n            default: return gender;\r\n        }\r\n    }\r\n\r\n    const translateColor = color => {\r\n        switch(color) {\r\n            case 'blue': return 'Azul';\r\n            case 'blue-gray': return 'Azul Acizentado';\r\n            case 'red': return 'Vermelho';\r\n            case 'yellow': return 'Amarelo';\r\n            case 'brown': return 'Castanho';\r\n            case 'black': return 'Preto';\r\n            case 'white': return 'Branco';\r\n            case 'green, yellow': return 'Verde e Amarelo';\r\n            case 'gold': return 'Dourado';\r\n            case 'orange': return 'Laranja';\r\n            case 'red, blue': return 'Vermelho e Azul';\r\n            case 'hazel': return 'Avelã';\r\n            case 'pink': return 'Rosa';\r\n            case 'unknown': return 'Desconhecido';\r\n            default: return color;\r\n        }\r\n    }\r\n\r\n\r\n    return ( \r\n        <div className=\"character-info-details\">\r\n            <header className=\"character-info-header\">\r\n                <button className=\"secondary-button\" onClick={ () => history.goBack() }>Voltar</button>\r\n                <h1>{character.name}</h1>\r\n            </header>\r\n            <div className=\"character-info-column\">\r\n                <h3>Informações</h3>\r\n                <div className=\"information-table\">\r\n                    <div className=\"information-table-row\">\r\n                        <p className=\"row-header\">Ano de Nascimento</p>\r\n                        <p className=\"row-data\">{character.birth_year}</p>\r\n                    </div>\r\n                    <div className=\"information-table-row\">\r\n                        <p className=\"row-header\">Gênero</p>\r\n                        <p className=\"row-data\">{translateGender(character.gender)}</p>\r\n                    </div>\r\n                    <div className=\"information-table-row\">\r\n                        <p className=\"row-header\">Cor dos Olhos</p>\r\n                        <p className=\"row-data\">{translateColor(character.eye_color)}</p>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n            <div className=\"character-info-column\">\r\n                <h3>Filmes</h3>\r\n                <ul className=\"movie-list\">\r\n                    { \r\n                        character.movies.map( (movie, key) => {\r\n                            return (<li key={key} className=\"movie-item\">\r\n                                <p>{movie.title}</p>\r\n                                <p><span>Lançamento: </span>{getFormattedDate(movie.release_date)}</p>\r\n                            </li>)\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CharacterDetails;","import React from 'react';\r\n\r\nimport \"./styles.css\"\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"sw-spinner-container\">\r\n            <div class=\"sw-spinner\">\r\n                <div class=\"ls-particles ls-part-1\"></div>\r\n                <div class=\"ls-particles ls-part-2\"></div>\r\n                <div class=\"ls-particles ls-part-3\"></div>\r\n                <div class=\"ls-particles ls-part-4\"></div>\r\n                <div class=\"ls-particles ls-part-5\"></div>\r\n                <div class=\"lightsaber ls-left ls-green\"></div>\r\n                <div class=\"lightsaber ls-right ls-red\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Spinner;","import { API_URL } from \"../utils/constants\";\r\n\r\nconst getAll = async () => await send(`${API_URL}/people`)\r\n\r\nconst paginate = async next => await send(next);\r\n\r\nconst find = async url => {\r\n    const response = await send(url);\r\n    if( response ) {\r\n        const requests = response.films.map(send);\r\n        const movies = await Promise.all(requests);\r\n        return { ...response, movies };\r\n    }\r\n    return false;\r\n}\r\n\r\nconst send = async url  => {\r\n    try {\r\n        const response = await fetch(url);\r\n        return response.json();\r\n    } catch {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const CharacterRepository = { \r\n    getAll,\r\n    paginate,\r\n    find\r\n}\r\n","export const API_URL = 'https://swapi.dev/api';","import React, { useEffect, useState } from 'react';\r\nimport CharacterDetails from '../../components/CharacterDetails';\r\nimport Spinner from '../../components/Spinner';\r\nimport { CharacterRepository } from '../../repositories/character_repository';\r\nimport { useQuery } from '../../utils/useQuery';\r\n\r\nconst CharacterInfoPage = () => {\r\n    const query = useQuery();\r\n    const url = query.get('source');\r\n    const [ character, setCharacter ] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const getCharacterInfo = async () => {\r\n            const character = await CharacterRepository.find(url);\r\n            if( character ) {\r\n                setCharacter(character)\r\n            }\r\n        }\r\n        getCharacterInfo();\r\n    }, [])\r\n\r\n\r\n    return ( \r\n        <main className=\"character-info\">\r\n            {\r\n                character\r\n                ? (<CharacterDetails character={character} />)\r\n                : (<Spinner />)\r\n            }\r\n        </main>\r\n    );\r\n}\r\n \r\nexport default CharacterInfoPage;","import { useLocation } from \"react-router\";\r\n\r\nexport const useQuery = () => new URLSearchParams(useLocation().search);","export default __webpack_public_path__ + \"static/media/darth-vader.defc5378.png\";","import React from 'react';\r\n\r\nimport \"./styles.css\";\r\nimport icon from \"../../assets/darth-vader.png\";\r\n\r\nconst AsideFilters = ({ onSearch }) => {\r\n    return ( \r\n        <aside className=\"aside-filters\">\r\n            <div className=\"aside-header\">\r\n                <img src={icon} />\r\n                <h1>Star Wars Library</h1>\r\n            </div>\r\n            <div className=\"search-container\">\r\n                <h3>Procure por nome:</h3>\r\n                <input type=\"text\" name=\"search\" id=\"search\" />\r\n            </div>\r\n            <div className=\"radio-container\">\r\n                <h3>Gênero</h3>\r\n                <div className=\"radio-input\">\r\n                    <input type=\"radio\" name=\"gender\" value=\"male\" id=\"gender-male\" />\r\n                    <label htmlFor=\"gender-male\">Masculino</label>\r\n                </div>\r\n                <div className=\"radio-input\">\r\n                    <input type=\"radio\" name=\"gender\" value=\"female\" id=\"gender-female\" />\r\n                    <label htmlFor=\"gender-female\">Feminino</label>\r\n                </div>\r\n                <div className=\"radio-input\">\r\n                    <input type=\"radio\" name=\"gender\" value=\"unknown\" id=\"gender-unknown\" />\r\n                    <label htmlFor=\"gender-unknown\">Desconhecido</label>\r\n                </div>\r\n                <div className=\"radio-input\">\r\n                    <input type=\"radio\" name=\"gender\" value=\"na\" id=\"gender-na\" />\r\n                    <label htmlFor=\"gender-na\" >N/A</label>\r\n                </div>\r\n            </div>\r\n            <button className=\"aside-button\">Pesquisar</button>\r\n        </aside>\r\n    );\r\n}\r\n \r\nexport default AsideFilters;","import { Link } from \"react-router-dom\"\r\n\r\nimport \"./styles.css\"\r\n\r\nconst CharacterItem = ({ character }) => {    \r\n    return ( \r\n        <article className=\"character-item\">\r\n            <p>{ character.name }</p>\r\n            <Link to={ `/character/?source=${character.url}`} >Ver mais</Link>\r\n        </article>\r\n    );\r\n}\r\n \r\nexport default CharacterItem;","import React from 'react';\r\nimport CharacterItem from '../CharacterItem';\r\n\r\nimport \"./styles.css\";\r\n\r\nconst CharacterGrid = ({ characters }) => {\r\n    return ( \r\n        <section className=\"character-grid\">\r\n            { \r\n                characters ? characters.map( (ch, key) => (<CharacterItem key={key} character={ch} />)  ) : ''\r\n            }\r\n        </section>\r\n    );\r\n}\r\n \r\nexport default CharacterGrid;","import React from 'react';\r\n\r\nimport \"./styles.css\";\r\n\r\nconst TopBar = ({ count, containsPrevious, containsNext, OnNextPage, OnPreviousPage }) => {\r\n    return (\r\n        <header className=\"top-bar\">\r\n            <p className=\"result-information\">Mostrando {count} resultado(s)</p>\r\n            <div className=\"action-butto\">\r\n                { containsPrevious ? (<button className=\"previous-page secondary-button\" onClick={OnPreviousPage}>Anterior</button>) : ''}\r\n                { containsNext ? (<button className=\"next-page secondary-button\" onClick={OnNextPage}>Próximo</button>) : ''}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n \r\nexport default TopBar;","import { useEffect, useState } from \"react\";\r\nimport AsideFilters from \"../../components/AsideFilters\";\r\nimport CharacterGrid from \"../../components/CharacterGrid\";\r\nimport TopBar from \"../../components/TopBar\";\r\nimport { CharacterRepository } from \"../../repositories/character_repository\"\r\n\r\nimport \"./styles.css\";\r\n\r\nconst CharacterList = () => {\r\n\r\n    const [ characters, setCharacters ] = useState([]);\r\n    const [ previousLink, setPreviousLink ] = useState(null);\r\n    const [ nextLink, setNextLink ] = useState(null);\r\n    const [ resultsNumber, setResultsNumber ] = useState(0);\r\n\r\n    useEffect( () => {\r\n        const fecthCharacters = async () => {\r\n            const response = await CharacterRepository.getAll();\r\n            if( response ) {\r\n                updateCharacterList(response)\r\n            }\r\n        }\r\n        fecthCharacters();\r\n    }, [])\r\n\r\n    const updateCharacterList = response => {\r\n        setCharacters(response.results)\r\n        setPreviousLink(response.previous)\r\n        setNextLink(response.next)\r\n        setResultsNumber(response.count)    \r\n    }\r\n\r\n    const paginate = url => async () => {\r\n        console.log(url)\r\n        if( url != null ) {\r\n            const response = await CharacterRepository.paginate(url);\r\n            if( response ) {\r\n                updateCharacterList(response)\r\n            }    \r\n        }\r\n    } \r\n\r\n    const handleNextPage = paginate(nextLink)\r\n    const handlePreviousPage = paginate(previousLink)\r\n\r\n    const handleSearch = () => {}\r\n\r\n    return ( \r\n        <main className=\"character-list\">\r\n            <AsideFilters onSearch={handleSearch}/>\r\n            <TopBar count={resultsNumber} \r\n                    containsPrevious={ previousLink != null } \r\n                    containsNext={ nextLink != null }\r\n                    OnNextPage={handleNextPage} \r\n                    OnPreviousPage={handlePreviousPage} />\r\n            <CharacterGrid characters={characters} />\r\n        </main>\r\n    );\r\n}\r\n \r\nexport default CharacterList;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport CharacterInfoPage from './pages/CharacterInfoPage';\r\nimport CharacterListPage from './pages/CharacterListPage';\r\n\r\nconst Routes = () => {\r\n    return ( \r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={ CharacterListPage } />\r\n                <Route path=\"/character/\" component={ CharacterInfoPage } />\r\n            </Switch>\r\n        </BrowserRouter>\r\n     );\r\n}\r\n \r\nexport default Routes;","import './App.css';\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <div className=\"sw-app\">\n      <div className=\"sw-app-box main-grid\">\n        <Routes />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}